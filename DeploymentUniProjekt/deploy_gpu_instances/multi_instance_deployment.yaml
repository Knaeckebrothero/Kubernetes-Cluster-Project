---
# Multi-Instance Deployment for High-Traffic Model
# Runs multiple replicas across available GPUs with automatic load balancing
# Example: Multiple instances of Llama 3.1 8B for high availability
apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-3-1-8b-multi
  namespace: llm-serving
  labels:
    app: llama-3-1-8b-multi
    model-size: small
    deployment-type: multi-instance
    framework: vllm
spec:
  replicas: 3  # Run on all 3 available L40 GPUs
  selector:
    matchLabels:
      app: llama-3-1-8b-multi
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1  # Maintain service during updates
  template:
    metadata:
      labels:
        app: llama-3-1-8b-multi
        model-size: small
        deployment-type: multi-instance
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - llama-3-1-8b-multi
            topologyKey: "kubernetes.io/hostname"  # Ensure pods on different GPUs
      containers:
      - name: vllm-server
        image: vllm/vllm-openai:v0.5.0
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: metrics  # Prometheus metrics
          protocol: TCP
        env:
        - name: MODEL
          value: "meta-llama/Meta-Llama-3.1-8B-Instruct"
        - name: SERVED_MODEL_NAME
          value: "llama-3.1-8b"
        - name: MAX_MODEL_LEN
          value: "32768"
        - name: GPU_MEMORY_UTILIZATION
          value: "0.95"
        - name: MAX_NUM_BATCHED_TOKENS
          value: "32768"
        - name: MAX_NUM_SEQS
          value: "256"
        - name: TENSOR_PARALLEL_SIZE
          value: "1"
        - name: DTYPE
          value: "bfloat16"
        - name: HF_HOME
          value: "/model-cache"
        - name: TRANSFORMERS_CACHE
          value: "/model-cache"
        - name: PORT
          value: "8000"
        # Multi-instance specific settings
        - name: ENABLE_METRICS
          value: "true"  # Enable Prometheus metrics
        - name: METRICS_PORT
          value: "8001"
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name  # For logging/tracing
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "32Gi"
            cpu: "8"
            nvidia.com/gpu: "1"
          limits:
            memory: "48Gi"
            cpu: "16"
            nvidia.com/gpu: "1"
        volumeMounts:
        - name: model-cache
          mountPath: /model-cache
        - name: dshm
          mountPath: /dev/shm
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 300
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 300
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: model-cache
        persistentVolumeClaim:
          claimName: model-cache-pvc
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 16Gi
      nodeSelector:
        node.kubernetes.io/gpu: "true"
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
---
# Load Balanced Service for Multi-Instance Deployment
apiVersion: v1
kind: Service
metadata:
  name: llama-multi-lb
  namespace: llm-serving
  labels:
    app: llama-3-1-8b-multi
  annotations:
    service.kubernetes.io/session-affinity: "ClientIP"  # Sticky sessions for conversations
    service.kubernetes.io/session-affinity-timeout: "3600"
spec:
  type: LoadBalancer  # Or ClusterIP if using Ingress
  selector:
    app: llama-3-1-8b-multi
  ports:
  - port: 80
    targetPort: 8000
    protocol: TCP
    name: http
  - port: 8001
    targetPort: 8001
    protocol: TCP
    name: metrics
  sessionAffinity: ClientIP  # Maintain conversation context
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
---
# HorizontalPodAutoscaler for Dynamic Scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: llama-multi-hpa
  namespace: llm-serving
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: llama-3-1-8b-multi
  minReplicas: 1
  maxReplicas: 3  # Maximum number of L40 GPUs available
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300  # Wait 5 minutes before scaling down
      policies:
      - type: Percent
        value: 50  # Scale down 50% at a time
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60  # Scale up quickly
      policies:
      - type: Percent
        value: 100  # Double capacity if needed
        periodSeconds: 60
        