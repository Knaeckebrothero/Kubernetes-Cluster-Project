# MinIO Tenant configuration
# https://min.io/
# https://github.com/minio/operator/tree/master/examples/kustomization/
# kubectl kustomize https://github.com/minio/operator/examples/kustomization/base/ > tenant-base.yaml


# MinIO Tenant configuration
apiVersion: minio.min.io/v2
kind: Tenant
metadata:
  annotations: {}
  labels:
    app: minio
  name: minio-tenant
  namespace: minio-tenant
spec:
  certConfig: {}
  configuration:
    name: minio-storage-configuration
  env: []
  externalCaCertSecret: []
  externalCertSecret: []
  externalClientCertSecrets: []
  features:
    bucketDNS: false
    domains: {}
  image: quay.io/minio/minio:RELEASE.2024-08-17T01-24-54Z
  imagePullPolicy: IfNotPresent
  imagePullSecret: {}
  mountPath: /export
  podManagementPolicy: Parallel
  pools:
  - affinity:
      nodeAffinity: {}
      podAffinity: {}
      # Pod anti-affinity to ensure that MinIO Tenant pods are not scheduled on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                v1.min.io/tenant: minio-tenant
            topologyKey: "kubernetes.io/hostname"
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    name: pool-0
    nodeSelector: {}
    resources:
        requests:
          cpu: 100m
          memory: 4Gi
        limits:
          cpu: 1000m
          memory: 16Gi
    securityContext:
      fsGroup: 1000
      fsGroupChangePolicy: OnRootMismatch
      runAsGroup: 1000
      runAsNonRoot: true
      runAsUser: 1000
    # Total number of servers in the MinIO Tenant
    servers: 3
    tolerations: []
    topologySpreadConstraints: []
    volumeClaimTemplate:
      # Persistent volume claim template for the MinIO Tenant
      apiVersion: v1
      kind: persistentvolumeclaims
      metadata:
        name: hdd-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 3600Gi
        storageClassName: longhorn-hdd-minio
      status: {}
    # Number of volumes per server
    volumesPerServer: 2
  priorityClassName: ""
  requestAutoCert: false
  serviceAccountName: ""
  serviceMetadata:
    consoleServiceAnnotations: {}
    consoleServiceLabels: {}
    minioServiceAnnotations: {}
    minioServiceLabels: {}
  subPath: ""
  users:
  - name: minio-storage-user
